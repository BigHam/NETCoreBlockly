<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NetCore2Blockly</name>
    </assembly>
    <members>
        <member name="T:NetCore2Blockly.ActionInfo">
            <summary>
            generator
            </summary>
        </member>
        <member name="T:NetCore2Blockly.BlocklyFileGenerator">
            <summary>
            all blockly that should be generated
            </summary>
            
        </member>
        <member name="M:NetCore2Blockly.BlocklyFileGenerator.GenerateNewBlocklyTypesDefinition">
            <summary>
            Generates types of Blockly
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.BlocklyFileGenerator.GenerateBlocklyToolBoxValueDefinitionFile">
            <summary>
            Generates the blocks definition.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.BlocklyFileGenerator.GenerateBlocklyAPIFunctions">
            <summary>
            Functions blocklyAPIFunctions to be generated.
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetCore2Blockly.EnumerateWebAPI">
            <summary>
            enumerate and generate
            </summary>
        </member>
        <member name="M:NetCore2Blockly.EnumerateWebAPI.#ctor(Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionGroupCollectionProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:NetCore2Blockly.EnumerateWebAPI"/> class.
            </summary>
            <param name="api">The API.</param>
        </member>
        <member name="T:NetCore2Blockly.CLIExtension">
            <summary>
            extension to register to the startup
            </summary>
        </member>
        <member name="M:NetCore2Blockly.CLIExtension.AddBlockly(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the blockly to startup
            </summary>
            <param name="serviceCollection">The service collection.</param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.CLIExtension.UseBlockly(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
             use blockly
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="T:NetCore2Blockly.GenerateBlocklyFilesHostedService">
            <summary>
            host to enumerate
            </summary>
            <seealso cref="T:Microsoft.Extensions.Hosting.IHostedService" />
        </member>
        <member name="F:NetCore2Blockly.GenerateBlocklyFilesHostedService.app">
            <summary>
            The application
            </summary>
        </member>
        <member name="M:NetCore2Blockly.GenerateBlocklyFilesHostedService.#ctor(Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionGroupCollectionProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:NetCore2Blockly.GenerateBlocklyFilesHostedService"/> class.
            </summary>
            <param name="api">The API.</param>
        </member>
        <member name="M:NetCore2Blockly.GenerateBlocklyFilesHostedService.StartAsync(System.Threading.CancellationToken)">
            <summary>
            starts
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:NetCore2Blockly.GenerateBlocklyFilesHostedService.StopAsync(System.Threading.CancellationToken)">
            <summary>
            Triggered when the application host is performing a graceful shutdown.
            </summary>
            <param name="cancellationToken">Indicates that the shutdown process should no longer be graceful.</param>
        </member>
    </members>
</doc>
